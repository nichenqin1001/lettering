(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.Lettering = factory());
}(this, (function () { 'use strict';

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();







var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

























var taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

var _templateObject = taggedTemplateLiteral(['el'], ['el']);

var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
  window.setTimeout(callback, 1000 / 60);
};

var x = function x(p) {
  throw new Error('Missing Parameter: ' + p);
};

var defaultOptions = {
  speed: 150
};

var removeChild = function removeChild(el) {
  while (el.firstChild) {
    el.removeChild(el.firstChild);
  }
};

var Lettering = function () {
  /**
   * Creates an instance of Lettering.
   * @param {HTMLElement} el 
   * @param {object} options 
   * 
   * @memberof Lettering
   */
  function Lettering() {
    var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : x(_templateObject);
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    classCallCheck(this, Lettering);

    // init type element
    this.el = typeof el === 'string' ? document.querySelector(el) : el;
    // init options
    this.options = _extends({}, defaultOptions, options);

    this.string = this.el.textContent;

    this.stringArrLike = Array.prototype.slice.call(this.string);

    this.stringIndex = 0;

    this.print = this.print.bind(this);

    this._init();
  }

  createClass(Lettering, [{
    key: '_init',
    value: function _init() {
      removeChild(this.el);

      this.print();
    }
  }, {
    key: '_renderText',
    value: function _renderText(num) {
      this.el.appendChild(document.createTextNode(this.stringArrLike[num]));
    }
  }, {
    key: 'print',
    value: function print() {
      this._renderText(this.stringIndex);

      this.stringIndex++;

      if (this.stringIndex < this.stringArrLike.length) return this.requestId = rAF(this.print);
    }
  }, {
    key: 'back',
    value: function back() {}
  }]);
  return Lettering;
}();

return Lettering;

})));
